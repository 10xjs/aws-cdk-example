"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Graphviz = void 0;

var React = _interopRequireWildcard(require("react"));

var _d3Graphviz = require("d3-graphviz");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

class Graphviz extends React.Component {
  constructor(props) {
    super(props);

    this.render = () => {
      const {
        className
      } = this.props;
      return React.createElement("div", {
        className: className,
        id: this.id
      });
    };

    this.componentDidMount = () => {
      this.renderGraph();
    };

    this.componentDidUpdate = () => {
      this.renderGraph();
    };

    this.renderGraph = () => {
      const {
        dot,
        options
      } = this.props;
      (0, _d3Graphviz.graphviz)(`#${this.id}`).options(Object.assign(Object.assign({}, Graphviz.defaultOptions), options || {})).renderDot(dot);
    };

    this.id = `graphviz${Graphviz.count}`;
    Graphviz.count += 1;
  }

}

exports.Graphviz = Graphviz;
Graphviz.count = 0;
Graphviz.defaultOptions = {
  fit: true,
  height: 500,
  width: 500,
  zoom: false
};